{"version":3,"sources":["services/auth-service.js","context/auth.context.js","pages/login/Login.js","pages/signup/Signup.js","pages/signup/SignupPatient.js","components/routes/AnonRoutes.js","components/routes/PrivateRoutes.js","components/UserSelector.js","services/doctor-service.js","pages/profile/DoctorProfile.js","services/patient-service.js","services/diary-service.js","components/modals/BaseModal.js","services/activity-service.js","components/modals/ActivityModal.js","components/modals/DiaryModal.js","helpers/helpers.js","pages/profile/PatientProfile.js","services/session-service.js","components/modals/SeeActivityModal.js","components/modals/CreateActivityModal.js","components/modals/SessionModal.js","components/modals/EditPatientModal.js","pages/profile/PatientDetails.js","App.js","reportWebVitals.js","index.js"],"names":["AuthService","this","instance","axios","create","baseURL","process","withCredentials","data","post","get","React","createContext","Consumer","Provider","AuthProvider","state","isLoggedIn","isLoading","user","signup","a","response","setState","login","then","catch","logout","error","console","edit","value","props","children","Component","withAuth","WrappedComponent","validators","username","password","message","length","fields","errors","event","preventDefault","target","name","onSubmit","e","handleSubmit","className","TextField","type","placeholder","onChange","handleChange","Button","variant","color","EMAIL_PATTERN","email","test","mobilephone","htmlFor","birthdate","log","signupPatient","window","location","reload","Array","isArray","patients","to","routeProps","exact","path","redirectPath","ComponentToShow","component","render","_id","setTimeout","DoctorService","id","body","put","DoctorProfile","doctor","match","params","getDoctor","map","item","href","onClick","withRouter","PatientService","delete","DiaryService","BaseModal","visible","onModalClose","stopPropagation","ActivityService","ActivityModal","answers","isSuccess","content","questions","index","editActivity","onAnswerChange","sendAnswers","DiaryModal","comment","text","createDiary","patient","patientId","readOnly","isNew","onTextChange","getDateFormat","date","d","Date","day","getDate","month","getMonth","year","getFullYear","getInputDateFormat","PatientProfile","activities","diary","isActivityModalVisible","currentActivity","isDiaryModalVisible","currentDiary","getPatient","getPatientData","activity","deleteDiary","openActivityModal","newDiary","openDiaryModal","onCloseModal","SessionService","SeeActivity","haveAnswers","CreateActivityModal","questionsAux","push","filteredQuestions","filter","createActivity","addNewQuestion","sendQuestions","SessionModal","createSession","EditPatientModal","editPatient","onUsernameChange","onNameChange","onEmailChange","onBirthdateChange","PatientDetails","sessions","isSeeActivityModalVisible","isCreateActivityModalVisible","isSessionModalVisible","isEditPatientModalVisible","session","currentSession","deleteActivity","deleteSession","deletePatient","seeActivityModal","seeSessionModal","SeeActivityModal","App","UserSelector","SignupPatient","Signup","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad92cf7c.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default class AuthService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n            withCredentials: true\n        })\n    }\n\n    signupPatient(data){\n        return(this.instance.post('/signup-patient', data)); \n    }\n\n    signup(data){\n        return(this.instance.post('/signup-doctor', data)); \n    }\n\n    login(data){\n        return(this.instance.post('/login', data));\n    }\n\n    logout(){\n        return(this.instance.post('/logout'));\n    }\n\n    isLoggedIn(){\n        return(this.instance.get('/loggedin'));\n    }\n\n    edit(data){\n        return(this.instance.post('/edit', data));\n    }\n\n}","import React from 'react';\nimport AuthService from '../services/auth-service';\n\nconst { Consumer, Provider } = React.createContext();\n\nclass AuthProvider extends React.Component {\n    state = {\n        isLoggedIn: false,\n        isLoading: true,\n        user: null\n    };\n\n    AuthService = new AuthService();\n\n    componentDidMount() {\n        this.AuthService.isLoggedIn()\n        .then((user) => {\n            if (user) {\n                this.setState({\n                    isLoggedIn: true,\n                    isLoading: false,\n                    user\n                });\n            }\n        })\n        .catch(() => {\n            this.setState({ isLoggedIn: false, isLoading: false, user: null})\n        })\n    }\n\n     // data serán los campos rellados del formulario de Signup\n    signup = async (data) => {\n        try {\n            const response = await this.AuthService.signup(data);\n            if(response){\n                this.setState({ isLoggedIn: true, user: response.data })\n            }\n        } catch(err){\n            this.setState({ isLoggedIn: false, user: null })\n        }\n    }\n\n    // data serán los campos rellados del formulario de Login\n    login = (data) => {\n        this.AuthService.login(data)\n        .then(response => this.setState({ isLoggedIn: true, user: response.data }))\n        .catch(() => this.setState({ isLoggedIn: false, user: null }))\n    }\n\n    logout = () => {\n        this.AuthService.logout()\n        .then(() => this.setState({ isLoggedIn: false, user: null }))\n        .catch(error => console.error(error))\n    }\n\n    edit = (data) => {\n        this.AuthService.edit(data)\n        .then(response => this.setState({ ...this.state, user: response.data }))\n        .catch(error => console.error(error))\n    }\n\n  render(){\n    const { isLoggedIn, isLoading, user } = this.state;\n\n    if(isLoading) return <p>Loading...</p>;\n\n    return (\n      <Provider value={{ isLoading, isLoggedIn, user, signup: this.signup, login: this.login, logout: this.logout, edit: this.edit }}>\n        {this.props.children}\n      </Provider>\n    )\n  }\n}\n\n\n\n// HOC - High Order Component that converts regular component into Consumer\nconst withAuth = (WrappedComponent) => {\n\n    return function(props){\n      return (\n        <Consumer>\n          {\n            (value) => {\n              const { isLoading, isLoggedIn, user, signup, login, logout, edit } = value;\n  \n              // Pasamos las props propias del contexto y además las props que ya recibiera el componente previamente via {...props}\n              return (\n                <WrappedComponent\n                  isLoggedIn={isLoggedIn}\n                  isLoading={isLoading}\n                  user={user}\n                  signup={signup}\n                  login={login}\n                  logout={logout}\n                  edit={edit}\n                  {...props}\n  \n                />\n              )\n            }\n          }\n        </Consumer>\n      )\n    }\n}\n  \nexport { AuthProvider, withAuth };\n","import React, { Component } from 'react'\nimport { TextField, Button } from '@material-ui/core';\nimport { withAuth } from '../../context/auth.context';\n\nconst validators = {\n  username: (value) => {\n    let message;\n    if(!value){\n      message = 'Username is required';\n    } \n  },\n  password: (value) => {\n    let message;\n    if(!value){\n      message = 'Password is required';\n    } else if(value.length < 3){\n      message = 'Invalid password'\n    }\n    return message;\n  },\n}\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      fields: {\n        username: \"\",\n        password: \"\"\n      },\n      errors: {\n        username: null,\n        password: null\n      }\n    }\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    this.props.login(this.state.fields);\n  }\n\n  handleChange(event){\n    const { name, value } = event.target;\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [name]: value\n      },\n      errors: {\n        ...this.state.errors,\n        [name]: validators[name](value)\n      }\n    })\n  }\n\n  render() {\n    const { fields } = this.state;\n    return (\n      <form onSubmit={(e) => this.handleSubmit(e)}>\n        <div className=\"form-item\">\n          <TextField type=\"text\" placeholder=\"Username\" name=\"username\" value={fields.username} onChange={(e) => this.handleChange(e)} />\n        </div>\n\n        <div className=\"form-item\">\n          <TextField type=\"password\" placeholder=\"Password\" name=\"password\" value={fields.password} onChange={(e) => this.handleChange(e)} />\n        </div>\n\n        <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n          Log in\n        </Button>\n      </form>\n    )\n  }\n}\n\nexport default withAuth(Login);","import React, { Component } from 'react'\nimport { withAuth } from '../../context/auth.context';\nconst EMAIL_PATTERN = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/ \n\nconst validators = {\n  username: (value) => {\n    let message;\n    if(!value){\n      message = 'Username is required';\n    }\n\n    return message;\n  },\n  name: (value) => {\n    let message;\n    if(!value){\n      message = 'Name is required';\n    }\n\n    return message;\n  },\n  email: (value) => {\n    let message;\n    if(!value){\n      message = 'Email is required';\n    } else if(!EMAIL_PATTERN.test(value)){\n      message = 'Invalid email';\n    }\n\n    return message;\n  },\n  password: (value) => {\n    let message;\n    if(!value){\n      message = 'Password is required';\n    } else if(value.length < 3){\n      message = 'Invalid password'\n    }\n\n    return message;\n  },\n  mobilephone: (value) => {\n    let message;\n    if(!value){\n      message = 'Phone number is required';\n    } else if(value.length < 9){\n      message = 'Invalid phone number'\n    }\n\n    return message;\n  },\n}\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      fields: {\n        username: \"\",\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        mobilephone: null,\n      },\n      errors: {\n        username: null,\n        name: null,\n        email: null,\n        password: null,\n        mobilephone: null,\n      }\n    }\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    const data = {\n        ...this.state.fields,\n    };\n    this.props.signup(data);\n  }\n\n  handleChange(event){\n    const { name, value } = event.target;\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        [name]: value\n      },\n      errors: {\n        ...this.state.errors,\n        [name]: validators[name](value)\n      }\n    })\n  }\n\n  render() {\n    const { fields } = this.state;\n    return (\n      <form onSubmit={(e) => this.handleSubmit(e)}>\n        <div className=\"form-item\">\n          <label htmlFor=\"username\">Username: </label>\n          <input type=\"text\" name=\"username\" value={fields.username} onChange={(e) => this.handleChange(e)} />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"name\">Name: </label>\n          <input type=\"text\" name=\"name\" value={fields.name} onChange={(e) => this.handleChange(e)} />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"password\">Password: </label>\n          <input type=\"password\" name=\"password\" value={fields.password} onChange={(e) => this.handleChange(e)} />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"mobilephone\">Mobilephone: </label>\n          <input type=\"tel\" name=\"mobilephone\" value={fields.mobilephone} onChange={(e) => this.handleChange(e)} />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"email\">Email: </label>\n          <input type=\"text\" name=\"email\" value={fields.email} onChange={(e) => this.handleChange(e)} />\n        </div>\n\n        <button type=\"submit\">\n          Create user\n        </button>\n      </form>\n    )\n  }\n}\n\nexport default withAuth(Signup);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { withAuth } from '../../context/auth.context';\nimport AuthService from '../../services/auth-service';\nconst EMAIL_PATTERN = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\n\nconst validators = {\n    username: (value) => {\n      let message;\n      if(!value){\n        message = 'Username is required';\n      }\n  \n      return message;\n    },\n    name: (value) => {\n      let message;\n      if(!value){\n        message = 'Name is required';\n      }\n  \n      return message;\n    },\n    birthdate: (value) => {\n        let message;\n        if(!value){\n          message = 'Birthdate is required';\n        }\n    \n        return message;\n    },\n    email: (value) => {\n      let message;\n      if(!value){\n        message = 'Email is required';\n      } else if(!EMAIL_PATTERN.test(value)){\n        message = 'Invalid email';\n      }\n  \n      return message;\n    },\n    password: (value) => {\n      let message;\n      if(!value){\n        message = 'Password is required';\n      } else if(value.length < 5){\n        message = 'Invalid password'\n      }\n      return message;\n    }\n}\n\nclass NewPatient extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            fields: {\n              username: \"\",\n              name: \"\",\n              email: \"\",\n              password: \"\",\n              birthdate: null,\n            },\n            errors: {\n              username: null,\n              name: null,\n              email: null,\n              password: null,\n              birthdate: null,\n            }\n          }\n    }\n\n    componentDidMount(){\n        console.log(this.props)\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        const data = {\n            ...this.state.fields,\n        };\n        const authService = new AuthService();\n        authService.signupPatient(data)\n        .then(()=>{\n            window.location.reload();\n        })\n    }\n\n    handleChange(event){\n        const { name, value } = event.target;\n        this.setState({\n          fields: {\n            ...this.state.fields,\n            [name]: value\n          },\n          errors: {\n            ...this.state.errors,\n            [name]: validators[name](value)\n          }\n        })\n    }\n\n    \n    render(){\n        if(this.props.user && this.props.user.data && Array.isArray(this.props.user.data.patients)){\n            return (\n                <div>\n                    <form onSubmit={(e) => this.handleSubmit(e)}>\n                        <div className=\"form-item\">\n                        <label htmlFor=\"username\">Username: </label>\n                        <input type=\"text\" name=\"username\" value={this.state.username} onChange={(e) => this.handleChange(e)} />\n                        </div>\n\n                        <div className=\"form-item\">\n                        <label htmlFor=\"name\">Name: </label>\n                        <input type=\"text\" name=\"name\" value={this.state.name} onChange={(e) => this.handleChange(e)} />\n                        </div>\n\n                        <div className=\"form-item\">\n                        <label htmlFor=\"password\">Password: </label>\n                        <input type=\"password\" name=\"password\" value={this.state.password} onChange={(e) => this.handleChange(e)} />\n                        </div>\n\n                        <div className=\"form-item\">\n                        <label htmlFor=\"birthdate\">birthdate: </label>\n                        <input type=\"date\" name=\"birthdate\" value={this.state.birthdate} onChange={(e) => this.handleChange(e)} />\n                        </div>\n\n                        <div className=\"form-item\">\n                        <label htmlFor=\"email\">Email: </label>\n                        <input type=\"text\" name=\"email\" value={this.state.email} onChange={(e) => this.handleChange(e)} />\n                        </div>\n\n                        <button type=\"submit\">\n                        Create patient\n                        </button>\n                    </form>\n                </div>\n            )\n        } else {\n            return(\n                <Redirect to='/user-selector' />\n            )\n        }\n    }\n}\n\nexport default withAuth(NewPatient);","import React from 'react'\nimport { Redirect, Route } from 'react-router'\nimport { withAuth } from './../../context/auth.context';\n\n// Ruta solo disponible si el usuario no ha iniciado sesión\nfunction AnonRoute(routeProps) {\n  // Value viene del AuthProvider\n  const { isLoggedIn, isLoading } = routeProps;\n\n  // props provienen del componente AnonRoute\n  const { exact, path, redirectPath = \"/user-selector\" } = routeProps;\n  const ComponentToShow = routeProps.component;\n\n  // AuthProvider todavía esta cargando la infirmación de la API para comprobar si hay usuario en sesión\n  if(isLoading) return <p>Loading...</p>;\n  return (\n    <Route \n      exact={exact}\n      path={path}\n      render={\n        function(props) {\n          if(isLoggedIn) return <Redirect to={redirectPath} />\n          else if(!isLoggedIn) return <ComponentToShow {...props} />\n        }\n      }\n    />\n  )\n}\n\nexport default withAuth(AnonRoute);\n","\nimport React from 'react'\nimport { Redirect, Route } from 'react-router'\nimport { withAuth } from './../../context/auth.context';\n\nfunction PrivateRoute(routeProps) {\n  // Value viene del AuthProvider\n  const { isLoggedIn, isLoading } = routeProps;\n\n  // props provienen del componente PrivateRoute\n  const { exact, path } = routeProps;\n  const ComponentToShow = routeProps.component;\n\n  // AuthProvider todavía esta cargando la infirmación de la API para comprobar si hay usuario en sesión\n  if(isLoading) return <p>Loading...</p>;\n  return (\n    <Route \n      exact={exact}\n      path={path}\n      render={\n        function(props) {\n          if(!isLoggedIn) return <Redirect to=\"/login\" />\n          else if(isLoggedIn) return <ComponentToShow {...props} />\n        }\n      }\n    />\n  )\n}\n\nexport default withAuth(PrivateRoute);","import React from 'react';\nimport { Redirect } from 'react-router'\nimport { withAuth } from '../context/auth.context'\n\nconst UserSelector = (props) => {\n    if (props.user.data) {\n        if (Array.isArray(props.user.data.patients)) { // Is a doctor\n            return (<Redirect to={`/doctor-profile/${props.user.data._id}`} />)\n        } else {\n            return (<Redirect to={`/patient-profile/${props.user.data._id}`} />)\n        }\n    }\n\n    setTimeout(() => {\n        window.location.reload();\n    }, 200);\n\n    return <p>Loading...</p>\n}\n\nexport default withAuth(UserSelector);\n","import axios from 'axios';\n\nexport default class DoctorService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/doctor`,\n            withCredentials: true\n        })\n    }\n\n    getDoctor(id){\n        return(this.instance.get(`/${id}`));\n    }\n\n    editDoctor(body) {\n        return(this.instance.put(body))\n    }\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { withAuth } from '../../context/auth.context';\nimport DoctorService from '../../services/doctor-service';\n\nclass DoctorProfile extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            doctor: {\n                patients: [],\n            },\n        };\n    }\n\n    componentDidMount(){\n        const id = this.props.match.params.id;\n        const doctorService = new DoctorService();\n        doctorService.getDoctor(id)\n        .then((response) => {\n            this.setState({\n                doctor: response.data,\n            });\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <h1>{this.state.doctor.name}</h1>\n                <p>{this.state.doctor.email}</p>\n                <p>{this.state.doctor.mobilephone}</p>\n                <div>\n                    {this.state.doctor.patients.map((item) => {\n                        return(\n                            <div>\n                                <h2>{item.name}</h2>\n                                <a href={`/patient-details/${item._id}`}>Show profile</a>\n                            </div>\n                        );\n                    })}\n                </div>\n                <button onClick={this.props.logout}>Log out</button>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(withAuth(DoctorProfile));\n","import axios from 'axios';\n\nexport default class PatientService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/patient`,\n            withCredentials: true\n        })\n    }\n\n    getPatient(id){\n        return(this.instance.get(`/${id}`));\n    }\n\n    editPatient(id, body) {\n        return(this.instance.put(`/edit/${id}`, body))\n    }\n\n    deletePatient(id) {\n        return(this.instance.delete(`/${id}`))\n    }\n}","import axios from 'axios';\n\nexport default class DiaryService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/diary`,\n            withCredentials: true\n        })\n    }\n\n    createDiary(body){\n        return(this.instance.post('/create', body));\n    }\n\n    getDiary(id){\n        return(this.instance.get(`/${id}`));\n    }\n\n    deleteDiary(id) {\n        return(this.instance.delete(`/${id}`))\n    }\n}\n","import React, { Component } from 'react';\nimport './BaseModal.css';\n\nclass BaseModal extends Component {\n    constructor(props){\n        super(props)\n    }\n\n    render(){\n        if(this.props.visible === true){\n            return(\n                <div className=\"modal-background\" onClick={this.props.onModalClose}>\n                    <div className=\"modal-container\" onClick={(e) => {e.stopPropagation()}}>\n                        {this.props.children}\n                    </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default BaseModal;","import axios from 'axios';\n\nexport default class ActivityService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/activity`,\n            withCredentials: true\n        })\n    }\n\n    createActivity(body){\n        return(this.instance.post('/create', body))\n    }\n\n    getActivity(id){\n        return(this.instance.get(`/${id}`));\n    }\n\n    editActivity(id, body) {\n        return(this.instance.put(`/edit/${id}`, body))\n    }\n\n    deleteActivity(id) {\n        return(this.instance.delete(`/${id}`));\n    }\n}\n\n","import React, { Component } from 'react';\nimport ActivityService from '../../services/activity-service'\nimport './BaseModal.css';\n\nclass ActivityModal extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            answers: [],\n            isSuccess: false,\n        }\n    }\n\n    componentDidMount(){\n        console.log(this.props.content)\n        const answers = this.props.content.questions.map(() => {\n            return \"\";\n        })\n        this.setState({\n            answers: answers,\n        })\n    }\n\n    onAnswerChange(value, index){\n        const answers = this.state.answers;\n        answers[index] = value;\n        this.setState({\n            answers: answers,\n        })\n    }\n\n    sendAnswers(){\n        const activityService = new ActivityService();\n        activityService.editActivity(this.props.content._id, { answers: this.state.answers })\n        .then(() => {\n            this.setState({\n                isSuccess: true,\n            })\n        })\n    \n    }\n\n    render(){\n        if (this.state.isSuccess) {\n            return \"ok\";\n        } else {\n            return(\n                <div>\n                    <div>\n                        {this.props.content.questions.map((item, index) => {\n                            return(\n                                <div>\n                                    <h3>{item}</h3>\n                                    <input type=\"text\" onChange={(e) => {this.onAnswerChange(e.target.value, index)}}/>\n                                </div>\n                            )\n                        })}\n                    </div>\n                    <button onClick={() => { this.sendAnswers(this); }}>Send answers</button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default ActivityModal;\n","import React, { Component } from 'react';\nimport DiaryService from '../../services/diary-service';\n\nclass DiaryModal extends Component {\n    constructor(props){\n        super(props)\n\n        if(this.props.content && this.props.content.comment){\n            this.state = {\n                text: this.props.content.comment,\n                isSuccess: false,\n            }\n        } else {\n            this.state = {\n                text: \"\",\n                isSuccess: false,\n            }\n        }\n    }\n\n    onTextChange(value){\n        this.setState({\n            text: value,\n        })\n    }\n\n    createDiary(){\n        const diaryService = new DiaryService();\n        diaryService.createDiary({ comment: this.state.text, patient: this.props.patientId })\n        .then(() => {\n            this.setState({\n                isSuccess: true,\n            })\n        })\n    }\n\n    render(){\n        if(this.state.isSuccess){\n            return ( \"ok\")\n        } else {\n            return (\n                <div>\n                    <input readOnly={!this.props.isNew} value={this.state.text} onChange={(e) => {this.onTextChange(e.target.value)}}/>\n                    {this.props.isNew ? <button onClick={() => { this.createDiary(this); }}>Send</button> : null}\n                </div>\n            )\n        }\n    }\n}\n\nexport default DiaryModal;","export const getDateFormat = (date) => {\n    const d = new Date(date);\n    let day  = d.getDate();\n    day = `${day < 10 ? 0 : ''}${day}`;\n    let month = d.getMonth() + 1;\n    month = `${month < 10 ? 0 : ''}${month}`;\n    const year = d.getFullYear();\n\n    return `${day}/${month}/${year}`;\n}\n\nexport const getInputDateFormat = (date) => {\n    const d = new Date(date);\n    let day  = d.getDate();\n    day = `${day < 10 ? 0 : ''}${day}`;\n    let month = d.getMonth() + 1;\n    month = `${month < 10 ? 0 : ''}${month}`;\n    const year = d.getFullYear();\n\n    return `${year}-${month}-${day}`;\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { withAuth } from '../../context/auth.context';\nimport PatientService from '../../services/patient-service';\nimport DiaryService from '../../services/diary-service';\nimport BaseModal from '../../components/modals/BaseModal';\nimport ActivityModal from '../../components/modals/ActivityModal';\nimport DiaryModal from '../../components/modals/DiaryModal';\nimport { getDateFormat } from '../../helpers/helpers';\nclass PatientProfile extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            patient: {\n                activities: [],\n                diary: [],\n            },\n            isActivityModalVisible: false,\n            currentActivity: {},\n            isDiaryModalVisible: false,\n            currentDiary: {},\n        };\n    }\n\n    getPatientData(){\n        const id = this.props.match.params.id;\n        const patientService = new PatientService();\n        patientService.getPatient(id)\n        .then((response) => {\n            this.setState({\n                patient: response.data,\n            });\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    componentDidMount(){\n        this.getPatientData();\n    }\n\n    openActivityModal(activity){\n        this.setState({\n            isActivityModalVisible: true,\n            currentActivity: activity,\n        });\n    }\n\n    openDiaryModal(diary){\n        this.setState({\n            isDiaryModalVisible: true,\n            currentDiary: diary,\n        });\n    }\n\n    newDiary(){\n        this.setState({\n            isDiaryModalVisible: true,\n            currentDiary: {},\n        })\n    }\n\n    onCloseModal(){\n        this.getPatientData();\n        this.setState({\n            isActivityModalVisible: false,\n            isDiaryModalVisible: false,\n        })\n    }\n\n    deleteDiary(diary){\n        const id = diary._id;\n        const diaryService = new DiaryService();\n        diaryService.deleteDiary(id)\n        .then(() => {\n            this.getPatientData();\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <div>\n                    <h1>{this.state.patient.name}</h1>\n                    <h1>{this.state.patient.email}</h1>\n                </div>\n                <div>\n                    <h2>Activities</h2>\n                    <div>\n                        {this.state.patient.activities.map((item) => {\n                            return(\n                                <div>\n                                    <h2>{getDateFormat(item.date)}</h2>\n                                    {(!item.answers || !item.answers.length) ?\n                                        (<button onClick={() => {this.openActivityModal(item)}}>Do activity</button>) : null}\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n                <div>\n                    <h2>Diaries</h2>\n                    <button onClick={() => {this.newDiary()}}>+</button>\n                    <div>\n                        {this.state.patient.diary.map((item) => {\n                            return(\n                                <div>\n                                    <h2>{getDateFormat(item.date)}</h2>\n                                    <button onClick={() => {this.openDiaryModal(item)}}>See diary</button>\n                                    <button onClick={() => {this.deleteDiary(item)}}>Delete diary</button>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n                <button onClick={this.props.logout}>Log out</button>\n                <BaseModal visible={this.state.isActivityModalVisible} onModalClose={() => {this.onCloseModal(this)}}>\n                    <ActivityModal content={this.state.currentActivity} />\n                </BaseModal>\n                <BaseModal visible={this.state.isDiaryModalVisible} onModalClose={() => {this.onCloseModal(this)}}>\n                    <DiaryModal\n                        content={this.state.currentDiary}\n                        isNew={!this.state.currentDiary || !this.state.currentDiary.comment}\n                        patientId={this.state.patient._id}\n                        />\n                </BaseModal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(withAuth(PatientProfile));","import axios from 'axios';\n\nexport default class SessionService {\n    constructor(){\n        this.instance = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/session`,\n            withCredentials: true\n        })\n    }\n\n    createSession(body){\n        return(this.instance.post('/create', body));\n    }\n\n    getSession(id){\n        return(this.instance.get(`/${id}`));\n    }\n\n    deleteSession(id) {\n        return(this.instance.delete(`/${id}`))\n    }\n}\n","import React, { Component } from 'react';\n\nclass SeeActivity extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        const haveAnswers = this.props.content.answers && this.props.content.answers.length;\n\n        return(\n            <div>\n                {this.props.content.questions.map((item, index) => {\n                    return(\n                        <div>\n                            <h3>{item}</h3>\n                            <p>{haveAnswers ? this.props.content.answers[index] : 'No answer'}</p>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default SeeActivity;","import React, { Component } from 'react';\nimport ActivityService from '../../services/activity-service'\n\nclass CreateActivityModal extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            questions: [\"\"],\n            isSuccess: false,\n        }\n    }\n\n    onTextChange(value, index){\n        const questionsAux = [...this.state.questions];\n        questionsAux[index] = value;\n        this.setState({\n            questions: questionsAux,\n        })\n    }\n\n    addNewQuestion(){\n        const questionsAux = [...this.state.questions];\n        questionsAux.push(\"\")\n        this.setState({\n            questions: questionsAux,\n        })\n    }\n\n    sendQuestions(){\n        const questionsAux = [...this.state.questions];\n        const filteredQuestions = questionsAux.filter((item) => {\n            if(item.length > 0){\n                return true;\n            } else {\n                return false;\n            }\n        })\n\n        if(filteredQuestions.length > 0){\n            const activityService = new ActivityService();\n            activityService.createActivity({\n                questions: filteredQuestions,\n                patient: this.props.patientId\n            })\n            .then(() => {\n                this.setState({\n                    isSuccess: true,\n                })\n            })\n        }\n    }\n\n    render(){\n        if(this.state.isSuccess){\n            return(\"Ok\")\n        } else {\n            return(\n                <div>\n                    <div>\n                        {this.state.questions.map((item, index) => {\n                            return(\n                                <input value={item} onChange={(e) => {this.onTextChange(e.target.value, index)}}/>\n                            )\n                        })}\n                        <button onClick={()=>{this.addNewQuestion(this)}}>Add new question</button>\n                    </div>\n                    <button onClick={() => {this.sendQuestions(this)}}>Send</button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default CreateActivityModal;","import React, { Component } from 'react';\nimport SessionService from '../../services/session-service';\n\nclass SessionModal extends Component {\n    constructor(props){\n        super(props)\n\n        if(this.props.content && this.props.content.comment){\n            this.state = {\n                text: this.props.content.comment,\n                isSuccess: false,\n            }\n        } else {\n            this.state = {\n                text: \"\",\n                isSuccess: false,\n            }\n        }\n    }\n\n    onTextChange(value){\n        this.setState({\n            text: value,\n        })\n    }\n\n    createSession(){\n        const sessionService = new SessionService();\n        sessionService.createSession({ comment: this.state.text, patient: this.props.patientId })\n        .then(() => {\n            this.setState({\n                isSuccess: true,\n            })\n        })\n    }\n\n    render(){\n        if(this.state.isSuccess){\n            return ( \"ok\")\n        } else {\n            return (\n                <div>\n                    <input readOnly={!this.props.isNew} value={this.state.text} onChange={(e) => {this.onTextChange(e.target.value)}}/>\n                    {this.props.isNew ? <button onClick={() => { this.createSession(this); }}>Send</button> : null}\n                </div>\n            )\n        }\n    }\n}\n\nexport default SessionModal;","import React, { Component } from 'react';\nimport PatientService from '../../services/patient-service';\nimport { getInputDateFormat } from '../../helpers/helpers';\n\nclass EditPatientModal extends Component {\n    constructor(props){\n        super(props);\n\n        const { name, username, email, birthdate } = props.content;\n        console.log(getInputDateFormat(birthdate))\n        this.state = {\n            name,\n            username,\n            email,\n            birthdate: getInputDateFormat(birthdate),\n            isSuccess: false,\n        };\n    }\n\n    onUsernameChange(value) {\n        this.setState({ username: value });\n    }\n\n    onNameChange(value) {\n        this.setState({ name: value });\n    }\n\n    onEmailChange(value) {\n        this.setState({ email: value });\n    }\n\n    onBirthdateChange(value) {\n        this.setState({ birthdate: value });\n    }\n\n    editPatient() {\n        const patientService = new PatientService();\n        patientService.editPatient(this.props.content._id, {\n            username: this.state.username,\n            name: this.state.name,\n            email: this.state.email,\n            birthdate: new Date(this.state.birthdate),\n        }).then(() => {\n            this.setState({isSuccess: true});\n        })\n    }\n\n    render(){\n        if (this.state.isSuccess) {\n            return 'ok';\n        } else {\n            return(\n                <div>\n                    <div>\n                        <label>Username:</label><input value={this.state.username} onChange={(e) => {this.onUsernameChange(e.target.value)}} />\n                    </div>\n                    <div>\n                        <label>Name:</label><input value={this.state.name} onChange={(e) => {this.onNameChange(e.target.value)}} />\n                    </div>\n                    <div>\n                        <label>Email:</label><input value={this.state.email} onChange={(e) => {this.onEmailChange(e.target.value)}} />\n                    </div>\n                    <div>\n                        <label>Birthdate:</label><input value={this.state.birthdate} type=\"date\" onChange={(e) => {this.onBirthdateChange(e.target.value)}} />\n                    </div>\n                    <button onClick={() => {this.editPatient(this)}}>Send</button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default EditPatientModal;","import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { withAuth } from '../../context/auth.context';\nimport PatientService from '../../services/patient-service';\nimport ActivityService from '../../services/activity-service';\nimport SessionService from '../../services/session-service';\nimport BaseModal from '../../components/modals/BaseModal';\nimport SeeActivityModal from '../../components/modals/SeeActivityModal';\nimport CreateActivityModal from '../../components/modals/CreateActivityModal';\nimport SessionModal from '../../components/modals/SessionModal';\nimport { getDateFormat } from '../../helpers/helpers';\nimport EditPatientModal from '../../components/modals/EditPatientModal';\n\nclass PatientDetails extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            patient: {\n                activities: [],\n                sessions: []\n            },\n            isSeeActivityModalVisible: false,\n            currentActivity: {},\n            isCreateActivityModalVisible: false,\n            isSessionModalVisible: false,\n            isEditPatientModalVisible: false,\n        };\n    }\n\n    getPatientData(){\n        const id = this.props.match.params.id;\n        const patientService = new PatientService();\n        patientService.getPatient(id)\n        .then((response) => {\n            this.setState({\n                patient: response.data,\n            });\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    seeActivityModal(activity){\n        this.setState({\n            isSeeActivityModalVisible: true,\n            currentActivity: activity\n        })\n    }\n\n    onModalClose(){\n        this.getPatientData();\n        this.setState({\n            isCreateActivityModalVisible: false,\n            isSessionModalVisible: false,\n            isEditPatientModalVisible: false,\n        });\n    }\n\n    componentDidMount(){\n        this.getPatientData();\n    }\n\n    seeSessionModal(session){\n        this.setState({\n            isSessionModalVisible: true,\n            currentSession: session\n        })\n    }\n\n    deleteActivity(activity){\n        const id = activity._id;\n        const activityService = new ActivityService();\n        activityService.deleteActivity(id)\n        .then(() => {\n            this.getPatientData();\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    deleteSession(session){\n        const id = session._id;\n        const sessionService = new SessionService();\n        sessionService.deleteSession(id)\n        .then(() => {\n            this.getPatientData();\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    deletePatient(){\n        const id = this.state.patient._id;\n        const patientService = new PatientService();\n        patientService.deletePatient(id)\n        .then(() => {\n            window.location.href = '/user-selector';\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <div>\n                    <h1>{this.state.patient.name}</h1>\n                    <p>{this.state.patient.email}</p>\n                    <button onClick={() => {this.setState({ isEditPatientModalVisible: true })}}>Edit patient</button>\n                    <button onClick={() => {this.deletePatient(this)}}>Delete patient</button>\n                </div>\n                <div>\n                    <div>\n                        <h2>Activities</h2>\n                        <button onClick={()=>{this.setState({isCreateActivityModalVisible: true})}}>+</button>\n                    </div>\n                    <div>\n                        {this.state.patient.activities.map((item) => {\n                            return(\n                                <div>\n                                    <h2>{getDateFormat(item.date)}</h2>\n                                    <button onClick={() => {this.seeActivityModal(item)}}>See activity</button>\n                                    <button onClick={() => {this.deleteActivity(item)}}>Delete activity</button>\n                                </div>\n                            )\n                        })}\n                    </div>\n                <div>\n                    <div>\n                        <h2>Sessions</h2>\n                        <button onClick={() => {this.setState({isSessionModalVisible: true})}}>+</button>\n                    </div>\n                    <div>\n                        {this.state.patient.sessions.map((item) => {\n                            return(\n                                <div>\n                                    <h2>{getDateFormat(item.date)}</h2>\n                                    <button onClick={() => {this.seeSessionModal(item)}}>See session</button>\n                                    <button onClick={() => {this.deleteSession(item)}}>Delete session</button>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n                </div>\n                <BaseModal visible={this.state.isSeeActivityModalVisible} onModalClose={() => {this.setState({isSeeActivityModalVisible:false})}}>\n                    <SeeActivityModal content={this.state.currentActivity} />\n                </BaseModal>\n                <BaseModal visible={this.state.isCreateActivityModalVisible} onModalClose={() => {this.onModalClose(this)}}>\n                    <CreateActivityModal patientId={this.state.patient._id} />\n                </BaseModal>\n                <BaseModal visible={this.state.isSessionModalVisible} onModalClose={() => {this.onModalClose(this)}}>\n                    <SessionModal \n                        content={this.state.currentSession}\n                        isNew={!this.state.currentSession || !this.state.currentSession.comment}\n                        patientId={this.state.patient._id}\n                    />\n                </BaseModal>\n                <BaseModal visible={this.state.isEditPatientModalVisible} onModalClose={() => {this.onModalClose(this)}}>\n                    <EditPatientModal content={this.state.patient} />\n                </BaseModal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(withAuth(PatientDetails));","import { Redirect, Route } from 'react-router-dom';\nimport Login from './pages/login/Login';\nimport Signup from './pages/signup/Signup';\nimport SignupPatient from './pages/signup/SignupPatient';\nimport AnonRoute from './components/routes/AnonRoutes';\nimport PrivateRoute from './components/routes/PrivateRoutes';\nimport UserSelector from './components/UserSelector';\nimport './App.css';\nimport DoctorProfile from './pages/profile/DoctorProfile';\nimport PatientProfile from './pages/profile/PatientProfile';\nimport PatientDetails from './pages/profile/PatientDetails';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Route exact path=\"/\" component={() => (<Redirect to=\"/login\" />)} />\n      <PrivateRoute exact path=\"/user-selector\" component={UserSelector} />\n      <PrivateRoute path=\"/doctor-profile/:id\" component={DoctorProfile} />\n      <PrivateRoute path=\"/patient-profile/:id\" component={PatientProfile} />\n      <PrivateRoute path=\"/patient-details/:id\" component={PatientDetails} />\n      <PrivateRoute path=\"/new-patient\" component={SignupPatient} />\n      <AnonRoute exact path=\"/signup\" component={Signup} />\n      <AnonRoute exact path=\"/login\" component={Login} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthProvider } from './context/auth.context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}